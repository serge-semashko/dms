[parameters]
debug=on ??
[end]


[report]
$SET_PARAMETERS tip=#imgPath#tree/
$SET_PARAMETERS USER_PRIV=0  ??!USER_PRIV
$SET_PARAMETERS_SESSION IS_JINR=#IS_JINR_#
$SET_PARAMETERS_SESSION USER_ID=1; USER_PERSON_ID=; USER_NAME=GUEST; ??!USER_ID

<html><head>
	<LINK REL=STYLESHEET TYPE="text/css" HREF="#ServletPath#?c=css/css">  
	
<link rel="stylesheet" type="text/css" href="./yui-ext/ext-all.css" />
<script type="text/javascript" src="./yui-ext/adapter/yui/yui-utilities.js"></script>
<script type="text/javascript" src="./yui-ext/adapter/yui/ext-yui-adapter.js"></script>
<script type="text/javascript" src="./yui-ext/ext-all.js"></script>
<script type="text/javascript" src="./yui-ext/connection/connection-min.js"></script>

<!-- Common Styles for the examples -->
<style type="text/css">
    .folder .x-tree-node-icon{
		background:transparent url(images/default/tree/folder.gif);
	}
	.x-tree-node-expanded .x-tree-node-icon{
		background:transparent url(images/default/tree/folder-open.gif);
	}
</style>

<script type="text/javascript">
var tree;
var depth;
var selected_node;
var TreeTest = function(){
    // shorthand
    var Tree = Ext.tree;
    Ext.BLANK_IMAGE_URL = "#imgPath#default/s.gif";
    return {
        init : function(){
            // yui-ext tree
            tree = new Tree.TreePanel('tree', {
                animate:false, 
								lines: false,
								loader: new Tree.TreeLoader({
                	dataUrl:'#ServerPath##ServletPath#?c=treeParser',
                	dataUrl:'#ServerPath##ServletPath#?c=treeParser',  ??
                    baseParams: {USER_ID:'#USER_ID#'} // custom http params
								}),
                enableDD:false,
                containerScroll: true,
                dropConfig: {appendOnly:true},
                rootVisible: false
            });
            
            // add a tree sorter in folder mode
            //new Tree.TreeSorter(tree, {folderSort:true});
            
            // set the root node
            var root = new Tree.AsyncTreeNode({
                text: 'Root', 
                draggable:false, // disable root node dragging
                id:'1'
            });
				root.on('load', expand_root);
		    function expand_root(node){
		        node.expandChildNodes(false);
		    }            
			  tree.setRootNode(root);
			
			tree.on('click', click_tree);
		    function click_tree(node,e){
		       depth=0;
		       collapsePath(tree.getRootNode(),node);
		    }            
            
// alert ("3");						
            // render the tree
            tree.render();
            
            root.expand(false, /*no anim*/ false);
            //-------------------------------------------------------------
        }
    };
// alert ("4");						
}();

Ext.EventManager.onDocumentReady(TreeTest.init, TreeTest, true);

function reloadMenu(id,param2)
{ try {
//  if(selected_node == id) return;
  selected_node = id;
	
	//alert(id);
	var handleSuccess = function(o){
		if(o.responseText !== undefined){
			//alert("Transaction id: " + o.tId);
			//alert("HTTP status: " + o.status);
			//alert("Status code message: " + o.statusText);
			//alert("<li>HTTP headers: <ul>" + o.getAllResponseHeaders + "</ul></li>");
			//alert("response: " + o.responseText);
			//alert(o.responseText);					
			//alert("Argument object: " + o.argument);
			tree.expandPath(o.responseText,'id',openFolderAfterExpandPath);
			//fnLoadComplete();
		}
	}
	}
	catch (e) {}
	
	var handleFailure = function(o){
		alert('Ошибка загрузки дерева');
	}
	var callback =
	{
	  success: handleSuccess,
	  failure: handleFailure
	};
	var sUrl = "#ServerPath##ServletPath#?c=getParentsPath.cfg&id=" + id;
	var request = YAHOO.util.Connect.asyncRequest('GET', sUrl, callback);
}


function openFolderAfterExpandPath(bSuccess, oLastNode){
  //alert("last node id=" + oLastNode.id);
  oLastNode.select();	
    depth=0;
	collapsePath(tree.getRootNode(),oLastNode);
	openFolder(oLastNode.id);
}

function collapsePath(ancestorNode, selectedNode){
  //alert("ancestor id=" + ancestorNode.id);
  //alert("Ancestor=" + ancestorNode.id + "; Selected=" + selectedNode.id);
  if(ancestorNode.id == selectedNode.id || depth >= selectedNode.getDepth()){
	  selectedNode.expand(false,false);
		return;
	}
	depth++;
	//alert("depth="+depth+"lenght="+ancestorNode.childNodes.length);
	for(i=0;i<ancestorNode.childNodes.length;i++){
		if(ancestorNode.childNodes[i].isExpanded()){
		 // alert(oLastNode.id);
		  //alert("Expanded=" + ancestorNode.childNodes[i].id);
		 // alert("i="+i+"node id=" + ancestorNode.childNodes[i].id +
			      // " is ancestor=" +selectedNode.isAncestor(ancestorNode.childNodes[i])
					//	 + " of node id=" + selectedNode.id);
			//alert(!selectedNode.isAncestor(ancestorNode.childNodes[i]) && ancestorNode.childNodes[i].id != selectedNode.id);			
			if(!selectedNode.isAncestor(ancestorNode.childNodes[i]) && ancestorNode.childNodes[i].id != selectedNode.id)
		     ancestorNode.childNodes[i].collapse(true,false);
			else
			   collapsePath(ancestorNode.childNodes[i],selectedNode);
		}		 
	}
	
}

var send=false;

function openFolder(id)
{ selected_node = id;
	var tm = (new Date()).getTime();
	alert ("openFolder:" + id); ??
	if (send)
	{	try { window.opener.setOtdel(id, "#form_name#", "#field#");	} catch (e) {;} 
		window.close(); 
	}
	else
		send=true;
}


function startup()
{
	reloadMenu(#CurrentFolderId#, true);	??CurrentFolderId
	window.focus();
}
</script>
</head>

<body style="background-color:0270A4;" onLoad="startup()" >
<br>
<div id="tree"></div>
CurrentFolderId:#CurrentFolderId# 
</center> 
</body></html>
[end]


[preSQLs]
set max_sp_recursion_depth=20;
select IF('#ClientIP#' like '159.93%','Y','') as "IS_JINR_";
[end]


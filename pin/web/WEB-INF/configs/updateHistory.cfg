
[header]
[end]


================================================================================
================================== SQLs ========================================
================================================================================
[preSQLs]
select hist_id as "HIST_ID", user_id as "HIST_UID"
from history_values
where id=#event_id#
and dat_ch>date_add(now() )
order by hist_id desc
limit 1
[end]


[save]
$GET_DATA [hist]  ??!caller=search
$GET_DATA [upd hist] ??upd_hist
$GET_DATA [add hist] ??!upd_hist
[end]

[upd hist]
UPDATE history_values 
set #FN# 
	dat_ch=now()
	,user_id=#USER_ID#
	,date=STR_TO_DATE('#DATE#','#dateShortFormat#')
	, subtype_id=#SUBTYPE_ID#
	,URL='#URL#'
	, ball=(select ball from event_values where id=#event_id# limit 1)
where 
hist_id=#upd_hist#
[end]

[add hist]
insert into history_values set #FN#
	dat_ch=now()
	, id=#event_id#
	, creator_id=(select creator_id from event_values where id=#event_id# limit 1)
	, dat_cr=(select dat_cr from event_values where id=#event_id# limit 1)
	, type_id= (select type_id from event_values where id=#event_id# limit 1)
	, ball=(select ball from event_values where id=#event_id# limit 1)
	,user_id=#USER_ID#
	,date=STR_TO_DATE('#DATE#','#dateShortFormat#')
	, subtype_id=#SUBTYPE_ID#
	,URL='#URL#'
[end]

[hist]
select hv.hist_id as upd_hist
from event_values ev join history_values hv 
	on ev.id=hv.id 
			and date(ev.dat_ch)=date(hv.dat_ch) 
			and ev.user_id=hv.user_id 
where  
	ev.id=#event_id#
  and hv.dat_ch=(select max(dat_ch) from history_values where id=#event_id#)
 ;
[end]


[set score]
#TYPE_SQL#; ??TYPE_SQL
#SUBTYPE_SQL#; ??SUBTYPE_SQL
[end]

[update SQL]
UPDATE event_values set #FN# 
 dat_ch=now(),user_id=#USER_ID#,
 date=STR_TO_DATE('#DATE#','#dateShortFormat#'), 
 subtype_id=#SUBTYPE_ID#,URL='#URL#' 
where id=#event_id#;
commit;
[end]

[prepare SQL]
SELECT  case 
	when evrs.data_type ='varchar' then concat(evrs.FIELD_NAME,'=''##',evrs.FIELD_NAME,'##'', ') 
	when evrs.data_type ='text' then concat(evrs.FIELD_NAME,'=''##',evrs.FIELD_NAME,'##'', ') 
	when evrs.data_type ='int' or evrs.data_type ='float' then concat(evrs.FIELD_NAME,'= case when LENGTH(''##',evrs.FIELD_NAME,'##'')=0 then NULL else ##',evrs.FIELD_NAME,'##+0 end, ') 
	when evrs.data_type ='date' then concat(evrs.FIELD_NAME,'=case when LENGTH(''##',evrs.FIELD_NAME,'##'')=0 then NULL else STR_TO_DATE(''##',evrs.FIELD_NAME,'##'',''#dateShortFormat#'')end , ')
end  as FN
from event_values evls 
	join event_vars evrs on evrs.type_id=evls.type_id
where 
	evls.id=#event_id# and evrs.render=1
[end]


[insert]
insert into event_values ( creator_id
,type_id, subtype_id, dat_cr, date) 
values (#USER_ID#, #F_TYPE_ID#
,#SUBTYPE_ID# ??SUBTYPE_ID		
,0			??!SUBTYPE_ID       
,now(),date(now()))
; 
SELECT LAST_INSERT_ID() as event_id;
insert into person_event (event_id,person_id) values (#event_id#,#id#);

select CONCAT(field_name,'="', default_value,'",')as DEFAULT_VALUES_TO_INSERT 
from event_vars 
where type_id=#F_TYPE_ID# 
	and default_value is not null
;

update event_values set #DEFAULT_VALUES_TO_INSERT# id=#event_id#
where id=#event_id#
;
[end]



[SQL]
select 
case when isc.character_maximum_length>255 then 1 else 0 end as LONG_CHAR, ??
	etps.name as TYPE_NAME
	,etps.id as TYPE_ID
	,evrs.field_name as FIELD_NAME 
	,evrs.view_field_name as VIEW_FIELD_NAME 
	,evrs.cfg as FIELD_CFG 
	,evrs.info_table as INFO_TABLE 
	,evrs.comment as COMMENT
	,concat(ifnull(etps.comment_ball,''),ifnull(estps.comment_ball,'')) as SCORE_RULE
	,evrs.name as VAR_NAME
	,evrs.useTextArea as USE_TEXTAREA
	,evls.value_comment as VALUE_COMMENT ??
	,evls.ball as SCORE
	,evls.id as event_id
	,isc.data_type as DATA_TYPE
	,isc.CHARACTER_MAXIMUM_LENGTH as CML
	,evrs.varchar_field_size as VCFS
	,DATE_FORMAT(evls.date,'#dateShortFormat#') as DATE
	,YEAR(evls.date) as DATE_YR 
	,MONTH(evls.date) as DATE_MNTH ??!DATE_MNTH
	,evls.URL as URL
	,evls.SUBTYPE_ID as SUBTYPE_ID 
from 
event_values evls 
	left join event_vars evrs on evrs.type_id=evls.type_id
	left join information_schema.COLUMNS isc on 
		(isc.column_name=evrs.field_name and isc.table_schema='#database#' and isc.table_name='event_values')
	left join event_types etps on etps.id=evrs.type_id
	left join event_subtypes estps on estps.id=evls.subtype_id
where 
	evrs.render=1
	and evls.id=#event_id#
order by evls.id, evrs.sort
;
[end]

[comments]
descr=JavaScript для вызова модулей и динамической подгрузки 
testURL=free/js_CallModule.dat
[end]

[report]

/*=========================================================================*/ ??
/*====================== Вызов модулей и возврат результатов ==============*/ ??

/*
 * Submit document.theForm в заданный фрейм (если он указан)
 * Ставит в форме значения "cop", "c" (если они указаны)
 * Убирает диалоговое окно (если !keepDialog == true)
 * если cop="u" | "save", то перед сабмитом вызывается checkInput() для проверки корректности данных формы
 */
var doSubmit=function(cop, c, keepDialog, frame)
{
console.log("doSubmit: c=" + c + "; frame=" + frame + ";");
	formChanged=false;
	frm=document.theForm;
  if(frame) frm.target=frame;
	if(c) module=c; ??Надо ли здесь? Похоже, что не надо!

	if(cop && (cop=='u' || cop=='save') && !checkInput($("[mand]"))) return; //проверка ввода
	if(c) {
		var c_Old = frm.c.value; //сохраняем старый "c"
		frm.c.value=c;
	}
	if(cop)	??
	 frm.cop.value=cop;
	console.log(c + " / " + cop); ??
	frm.submit();
	if (!keepDialog) HideDialog();
	if(c)	frm.c.value = c_Old;  //возвращаем c
	console.log(frm.c.value); ??
  frm.target="wf";
}

var delayed_c="";
var delayed_cop="";
var delayed_keepDialog="";

/* Отложенный сабмит формы - ТРЮК - НЕ ИСПОЛЬЗОВАТЬ!
 * сейчас используется только в admin/infos/info_editRecord.cfg
 * Нужно удалить и от туда.
 */
var doDelayedSubmit = function(delay, cop, c, keepDialog) {
	delayed_c=c;
	delayed_cop=cop;
	delayed_keepDialog=keepDialog;
// console.log("doDelayedSubmit: c=" + c + ", delay=" + delay);
	timeoutId = setTimeout(callDoSubmit, delay);
	setTimeout(doSubmit(cop, c, keepDialog), delay); ??
// console.log("timeout set: delay=" + delay + "; timeoutId = " + timeoutId );
}

var callDoSubmit = function(){ doSubmit(delayed_cop, delayed_c, delayed_keepDialog); }

/* запоминаем текущий модуль для последующего вызова по SUBMIT формы */ ??
var setModule=function(m)
{
	if(m) { 
		module=m;
		document.theForm.c.value=module;
	}
}
/*
 * AJAX-загрузка контента в target_div.
 * query - запрос в URL-формате (param1=val1&param2=val2)
 * Запрос выполняется только если элемент не скрыт.
 */
var AjaxCall=function(target_div, query) {
  if ($('##' + target_div).css('display') != 'none' ) {
    var data = {};
    var params = query.split("&");
    params.forEach(function(item) {
      var p = item.split("=");
      data[p[0]] = p[1];
    });

    var request = $.ajax({ url: "#ServletPath#", type: "POST", data, dataType: "html" });
      request.done(function( msg ) { if(target_div) $( "##" + target_div ).html( msg ); });
      request.fail(function( jqXHR, textStatus ) { alert( "Ошибка: " + textStatus ); });
  }
}

/*
 * Непосредственная загрузка URL в iframe
 */
function loadFrame(param, frame, host)
{ 
	var wf = "wf";
	if (frame) wf = frame;
	var tm = (new Date()).getTime();
	if(!host) 
		host="#ServletPath#";
	frames[wf].window.location.replace(host + "?" + param + "&tm=" + tm );
}

/*
 * Возврат результатов из iframe (из модуля) в основной документ браузера
 *
 */
var getResult = function(div_ids, res, visibleOnly)
{
  if(div_ids && res) {
    var divs = div_ids.split(",");
    var i;
    for (i=0; i<divs.length; i++) {
      if(visibleOnly) {
        if( $("##"+divs[i]).is(':visible') ) {
          $("##"+divs[i]).html(res.innerHTML); 
        } 
        else
          $("##"+divs[i]).html(""); 
      }
      else
        $("##"+divs[i]).html(res.innerHTML); 
    }
    if(res.innerHTML) 
    { setStandardEvents(); 
      res.innerHTML = ""; ??
    }
    if (div_ids==="popupCont") centerDialog();
  } 
}

[end]
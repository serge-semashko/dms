.cfg
[comments]
descr=S: получить права доступа текущего пользователя к документу. Попутно получается общая информация о документе
input=doc_id - ID документа, [uid] - ID юзера вместо текущего.
output=установка параметров: AR_R=Y -просмотр документа, AR_S-подпись, AR_W - изменение документа, AR_E - старт WF, AR_T - отзыв; AR_A - админские права. Попутно ставятся параметры: CREATOR_ID, DOC_VERSION, DOC_TYPE_ID, WF_ID, CURR_STEP, DOC_IS_ACTIVE, DOC_IS_DELETED, WF_CANCELLED, DOC_IS_REJECTED, DOC_DATA_TABLE
parents=
childs=
testURL=?c=sys/getARUD&doc_id=1&uid=1
author=Куняев
[end]

[parameters]
request_name=U:tooltip
KeepLog=false
ClearLog=true
[end]


[report]
<small>c=sys/getARUD</small><br> ??debug=on
$SET_PARAMETERS AR_R=; AR_S=; AR_W=; AR_E=; AR_T=; AR_A=;
$SET_PARAMETERS USER_ID=#uid#; ??uid

$GET_DATA [getDocInfoSQL]
$GET_DATA [check WF cancelled]
$SET_PARAMETERS WF_CANCELLED=Y; WF_ID=;  ??LAST_RESULT_CODE=6
$SET_PARAMETERS DOC_IS_REJECTED=Y; ??LAST_RESULT_CODE=0

$GET_DATA [getNextStepInfo] ??WF_ID
$SET_PARAMETERS FIRST_STEP_STARTED=Y; ??CURR_STEP>1|NEXT_STEP_STARTED
$INCLUDE [set initiator rights] ??USER_ID=#CREATOR_ID#
$INCLUDE [check sign rights] ??!USER_ID=#CREATOR_ID#&CREATOR_ID
$CALL_SERVICE c=sys/checkAdminRights ??!AR_S|!AR_T

$SET_PARAMETERS AR_T=Y;  ??AR_A=Y&WF_ID
$SET_PARAMETERS AR_S=; AR_W=Y; AR_T=;  ??DOC_IS_REJECTED=Y

$LOG ============== getARUD: doc_id=#doc_id#; USER_ID=#USER_ID#; ==================<br>
$LOG === AR_: R=#AR_R#; S=#AR_S#; W=#AR_W#; E=#AR_E#; T=#AR_T#; A=#AR_A#;<br>
$LOG === CREATOR_ID=#CREATOR_ID#; DOC_VERSION=#DOC_VERSION#; DOC_TYPE_ID=#DOC_TYPE_ID#; WF_ID=#WF_ID#; CURR_STEP=#CURR_STEP#; DOC_IS_ACTIVE=#DOC_IS_ACTIVE#<br>
$LOG === NEXT_STEP_USERS=#NEXT_STEP_USERS#; FIRST_STEP_STARTED=#FIRST_STEP_STARTED#<br><br>
[end]


[set initiator rights]
$SET_PARAMETERS AR_R=Y;
$SET_PARAMETERS AR_T=Y; ??WF_ID
$SET_PARAMETERS AR_E=Y; ??!WF_ID
$SET_PARAMETERS AR_W=Y; ??!FIRST_STEP_STARTED
$GET_DATA [checkSignRightSQL] ??WF_ID
[end]


[check sign rights]
$GET_DATA [checkSignRightSQL] ??NEXT_STEP_USERS
$SET_PARAMETERS AR_R=Y; ??AR_S=Y
$INCLUDE [check others rights]  ??!AR_S=Y
[end]


[check others rights]
$GET_DATA [checkRightsByWFSQL]  
$GET_DATA [checkRightsByFYISQL] ??!AR_R
[end]

===============================================================================
===================================    SQLs    ================================
===============================================================================

[check WF cancelled]
select /* the last step result from wf_history */
 wh.result_code as LAST_RESULT_CODE, DATE_FORMAT(wh.dat,'#dateFormat#') as CANCEL_DAT, u.FIO as CANCEL_FIO
from wf_history wh left join #table_users_full# u on u.id=wh.user_id
where doc_id=#doc_id#
order by dat desc
limit 0,1
[end]

[checkRightsByWFSQL]
select 'Y' as AR_R from dual
where exists (select id from wf_history where doc_id=#doc_id# and user_id=#USER_ID#)
;
[end]

[checkRightsByFYISQL]
select 'Y' as AR_R from dual
where exists (select id from d_sent_FYI where doc_id=#doc_id# and user_id=#USER_ID#)
;
select 'Y' as AR_W from dual where exists (select id from d_sent_FYI where doc_id=#doc_id# and user_id=#USER_ID# and result_code=5) ??!WF_ID
;
[end]

[checkSignRightSQL]
select 'Y' as AR_S from dual where #USER_ID# in(#NEXT_STEP_USERS#)
[end]

[getDocInfoSQL]
select d.CREATOR_ID, d.version as "DOC_VERSION", d.TYPE_ID as "DOC_TYPE_ID"
, d.is_active as "DOC_IS_ACTIVE", d.is_deleted as "DOC_IS_DELETED"
, w.id as WF_ID, w.CURR_STEP
, concat('d_data_', cast(type_id as char)) as "DOC_DATA_TABLE"
from d_list d left 
join wf_list w on w.doc_id=d.id
where d.id=#doc_id# 
;
[end]

[getNextStepInfo]
select concat(',', user_id) as "NEXT_STEP_USERS"
from wf where wf_id=#WF_ID# and step=#CURR_STEP# 
and user_id<>#CREATOR_ID# ??
;
select substring('#NEXT_STEP_USERS#', 2) as NEXT_STEP_USERS ??NEXT_STEP_USERS
;
select 'Y' as "NEXT_STEP_STARTED" from d_access_log where doc_id=#doc_id# and doc_version=#DOC_VERSION# and user_id in (#NEXT_STEP_USERS#) limit 0,1 ??NEXT_STEP_USERS
;
[end]

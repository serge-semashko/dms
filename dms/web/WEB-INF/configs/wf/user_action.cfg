[comments]
descr=U: зафиксировать действие пользователя с документом и запустить нужный шаг WF.

input=step_id - ID шага WF, result_code - код результата, [forward_user_id] - ID, кому переслано (при пересылке), [user_comment] - комментарий пользователя
output=Фиксируется действие пользователя в базе, вызывается process_step.cfg для продолжения WF
parents=docs/doc_user_action.cfg
childs=wf/start_wf_step.cfg
testURL=?c=wf/user_action&step_id=28&result_code=1&user_comment=Users_comment
author=Куняев
[end]


[parameters]
request_name=U:действие для док.#doc_id#
KeepLog=true
ClearLog=false
[end]


[report]
$CALL_SERVICE c=svs/get_user_info; requested_user_id=#USER_ID#

$GET_DATA [get wf info]
$LOG ======= начало транзакции для всего этого запроса ======
$GET_DATA [start transaction] 
$GET_DATA [update wf] ??!ERROR
$GET_DATA [add history] ??!ERROR
$LOG шаг #step_id# завершён;  ??!ERROR
$INCLUDE [set forward user] ??!ERROR&forward_user_id&result_code>1
===== Переход к след.шагу после подписи ===== ??
$CALL_SERVICE c=wf/start_wf_step; ??!ERROR&result_code>0
===== Возврат инициатору после отклонения ===== ??
$CALL_SERVICE c=wf/send_to_initiator;  ??!ERROR&result_code=0
#ERROR#
$LOG ======= конец транзакции ======
$GET_DATA [commit]
$CALL_SERVICE c=sys/log_doc_access; doc_id=#doc_id#; access_type=4;
[end]

[set forward user]
$SET_PARAMETERS next_user_id=#user_id#; ??result_code=3
$GET_DATA [insert extra user] ??result_code=3
$SET_PARAMETERS next_user_id=#forward_user_id#;
$GET_DATA [insert extra user] ??!ERROR
$CALL_SERVICE c=svs/get_user_info; requested_user_id=#forward_user_id#;
$GET_DATA [update result]
[end]

==============================================================
==============================================================
==============================================================
[start transaction]
lock tables wf_list write, wf write, wf_history write, wf_events write, wf_events_notifications write;
START TRANSACTION;
[end]

[commit]
COMMIT;   ??!ERROR
$INCLUDE [do rollback] ??ERROR
unlock tables;
[end]

[do rollback]
ROLLBACK; 
select max(id)+1 as NEXT_ID from wf;
ALTER TABLE wf AUTO_INCREMENT = #NEXT_ID#;
select max(id)+1 as NEXT_ID from wf_history;
ALTER TABLE wf_history AUTO_INCREMENT = #NEXT_ID#;
[end]

==============================================================
[insert extra user]
update wf set step=step+1 where wf_id=#wf_id# and step>#step#
;
insert into wf(wf_id, step, user_id, modified, modifier_id)
values(#wf_id#, #step#+1, #next_user_id#, now(), #USER_ID#)
;
[end]


[get wf info]
select /* получаем ID workflow, номер шага, данные юзера, выбранного для этого шага */ 
wf_id, step, user_id 
, role_id, role_target_type_id, role_target_id
, if(started is null, '', DATE_FORMAT(started,'#dateTimeSecFormat#')) as "STARTED"
, r.name as "USER_ROLE"
from wf 
left join a_roles r on r.id=wf.role_id
where wf.id=#step_id#
;
select doc_id from wf_list where id=#wf_id#
;
[end]


[update wf]
update wf /* ставим статус шага workflow (при пересылках результат заполняем позднее) */
set result_code=#result_code#
, result='Отказ' ??result_code=0
, result='Подписано' ??result_code=1
, comment='#user_comment#', finished=now(), modified=now(), modifier_id=#USER_ID# 
where id=#step_id#
;
update d_list set modified=now(), modifier_id=#USER_ID# where id=#doc_id#
;
[end]


[add history]
insert into wf_history /* copy WF step data into HISTORY table */
 (dat, wf_id, doc_id, step_id, step
, role_id, role_target_type_id, role_target_id
, user_id, user_fio, user_posts, user_role, user_email
, result_code, result, processed
, forward_user_id ??forward_user_id
, comment, client_ip, login_id)

values (
STR_TO_DATE('#STARTED#','#dateTimeSecFormat#') ??
now()
, #wf_id#, #doc_id#, #step_id#, #step#
, #role_id# ??role_id
, null ??!role_id
, #role_target_type_id# ??role_target_type_id
, null ??!role_target_type_id
, #role_target_id# ??role_target_id
, null ??!role_target_id
, #USER_ID#, '#u_FIO#', '#u_posts#', '#u_roles#', '#u_email#'
, #result_code#
, 'Отказ' ??result_code=0
, 'Подписано' ??result_code=1
, 'Делегировано' ??result_code=2
, 'Переслано с возвратом' ??result_code=3
, 'старт шага' ??!result_code
, now()
, #forward_user_id# ??forward_user_id
, '#user_comment#', '#ClientIP#', #USER_ID#)
;
select LAST_INSERT_ID() as "WF_HISTORY_ID"
;
[end]


[update result]
update wf_history set 
  result=concat(ifnull(result,'')
, ' Делегировано => #u_FIO#' ??result_code=2
, ' Переслано с возвратом: <=> #u_FIO#' 	??result_code=3
) where id=#WF_HISTORY_ID#
;
update wf set 
	result=concat(ifnull(result,'')
    , ' Делегировано => #u_FIO#' ??result_code=2
    , ' Переслано с возвратом: <=> #u_FIO#' 	??result_code=3
) where id=#step_id#
[end]

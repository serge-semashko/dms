[comments]
descr=JavaScript для вызова модулей и динамической подгрузки 
testURL=free/js_CallModule.dat
[end]

[report]

/*=========================================================================*/ ??
/*====================== Вызов модулей и возврат результатов ==============*/ ??
var ajaxRunning=false;
var ajaxQueue = [];


/**
 * Добавление запроса в очередь ajaxQueue.
 *
 * query - запрос в URL-формате (param1=val1&param2=val2)
 * Если force=TRUE, то запрос выполняется не зависимо от видимости target_div . 
 * Если force не задано или false, то запрос выполняется только если элемент target_div не скрыт.
 *
 * containerId - контейнер, откуда взять еще параметры запроса.
 * Берутся все непустые значения из input, textarea и select, находящихся в контейнере.
 * параметры, полученные в query имеют приоритет над параметрами из контейнера.
 *
 * Если showProgress=true, то при выполнении запроса будет показан прогресс бар (при запуске через JQuery - только муляж).
 */

var AjaxCall=function(target_div, query, force, containerId, showProgress) {
    var data = [];
    var vis = $('##' + target_div).css('display') != 'none';
    log(1, "AjaxCall: =>" + target_div + "; containerId=" + containerId + " / " + query + "; force=" + force + "; vis=" + vis); 
    if ( vis || force) {
    ----- забираем параметры из контейнера ---- ??
        if(containerId) data = $("##"+containerId+" input, ##" +containerId+" textarea, ##"+containerId + " select" ).serializeArray();
    ----- выбрасываем параметры без значений ---- ??
        for(i=data.length-1; i>=0; i--) {
            if(!data[i].value) {
                data.splice(i, 1);
            }
        }
    ----- добавлям параметры из query ---- ??
        var params = query.split("&");
        for(i=0; i<params.length; i++){
            var p = params[i].split("=");
            var nam = p[0]; 
            var n = indexOfName(data, nam);     
            if(n >= 0) {  // если такой параметр уже есть - заменяем его значение
                log(2, "replace " + nam + ":" + data[n].value  + " => " + params[i] + "; ");  ??
                data[n] = {name:p[0], value:p[1]}; 
            }
            else
                data.push({name:p[0], value:p[1]});
        }

        data.push({name:"ajax", value:"Y"});

        data2log(data); ??
        if(target_div)
            ajaxQueue.push(target_div);
        else
            ajaxQueue.push("-");
        ajaxQueue.push(data);
        ajaxQueue.push(showProgress);
        sendNextAjax();
    }
    else
        log(1, "xxx AjaxCall: vis=" + vis + "; force=" + force + "; SKIPPED!"); 
    return vis;
}

/**
 * Посылка очередного XHR-запроса и загрузка его вывода в target_div
 * Ждет сброса флага ajaxRunning по событию ajaxStop (завершение всех AJAX-запросов со страницы)
 * Выбирает данные очередного запроса из очереди ajaxQueue и посылает запрос
 * По окончании запроса заносит полученный результат в target_div
 */
var sendNextAjax=function() {
    if(ajaxRunning) return;
    ajaxRunning = true;
    var target_div=ajaxQueue.shift();
    if(!target_div) {
        ajaxRunning = false;
        return;
    }
    var data_=ajaxQueue.shift();
    log(1,"sendNextAjax: =>" + target_div); ??
        data2log(data_); ??
    var showProgress = ajaxQueue.shift();

    sendAjax_JQuery(target_div, data_, showProgress); ??
    sendAjax_XHR(target_div, data_, showProgress); 
}

function getXmlHttp(){
  var xmlhttp;
  try {
    xmlhttp = new ActiveXObject("Msxml2.XMLHTTP");
  } catch (e) {
    try {
      xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
    } catch (E) {
      xmlhttp = false;
    }
  }
  if (!xmlhttp && typeof XMLHttpRequest!='undefined') {
    xmlhttp = new XMLHttpRequest();
  }
  return xmlhttp;
}

/**
    11111111111111111111111111111111111111
 * Посылка XHR-запроса.
 * По окончании запроса заносит полученный результат в target_div
http://xmlhttprequest.ru/
https://learn.javascript.ru/ajax-xmlhttprequest
https://learn.javascript.ru/xhr-forms
 */
var sendAjax_XHR=function(target_div, data, showProgress) {
    log(2,"sendAjax => " + target_div); 
    var xhr = new XMLHttpRequest(); ??

    var d = "";
    for (var i in data) { 
        if(data[i].value) {
            var v = data[i].value;
            var v = data[i].value.replace(/[^0-9a-zA-Z_]/gi, '') ??
            var v = data[i].value.replace(/[^\n-я]/gi, '*'); ??
            d += "&" + data[i].name + "=" + encodeURIComponent( v );
            if(data[i].name != 'ajax')
                log(4, data[i].name + "=" + v);
        }
    }
    d = d.substring(1);
    log(3,"sendAjax_XHR:prepare request..."); ??

    if(showProgress) {
        try{
            showProgressBar(true);
            showBSProgressBar(true);
        }
        catch (e) {;}
    }

    var xhr = getXmlHttp();
    xhr.open('GET', '#ServletPath#?' + d, true);  ??
    xhr.open('POST', '#ServletPath#', true);
    xhr.setRequestHeader("X-Requested-With", "XMLHttpRequest");
    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
/*
 *  xhr.onreadystatechange
 */
    xhr.onreadystatechange = function() {
        if (xhr.readyState == 4) ??
            log(4,"XHRreadyState=" + xhr.readyState + " / " + xhr.status + "; " + xhr.responseText.length); ??
        try{ 
                setBSProgress(2 + xhr.responseText.length);
        } catch (e) {;} 
        try { 
            if(showProgress && xhr.readyState > 2 && xhr.responseText) {
                setProgress(2 + xhr.responseText.length);
            }
        } catch (e) {;} 

        if (xhr.readyState == 4) {
            log(2, "=> " + target_div + " : readyState=" + xhr.readyState + " / " + xhr.status + "; " + xhr.responseText.length); 
            if(showProgress) {
                try {
                    showProgressBar(false); 
                    showBSProgressBar(false);
                }
                catch (e) {;}
            }
            ajaxRunning=false;
            if(xhr.status == 200) {
                log(4, "sendAjax_XHR DONE: " + xhr.responseText + " => " + target_div); ??
                if(target_div != "-") {
                    $( "##" + target_div ).html( xhr.responseText ); 
                    setStandardEvents(); 
                }
            }
            sendNextAjax();
        } else {
            try{
                if(xhr.readyState > 2 && xhr.responseText && xhr.responseText.length > 10000  && target_div != "-") {
                    $( "##" + target_div ).html( xhr.responseText.replace( /<script/g, "<!-- " ).replace( /<\/script>/g, " -->" )  ); ??ZZZ&!APP_VERSION=MOBILE
                }
            } catch(e) {;}
        }
    };
/**/ ??

// 222222222222222222222222222222222222222 
    xhr.send(null); ??
    log(3,"sendAjax_XHR:" + d + "; => " + target_div); ??
    log(4,"sendAjax => " + target_div);
    xhr.send(d); 
}


var data2log = function(d) {
    for (var i in d) { 
      if(d[i].name == 'c') {
        log(2, " . c=" + d[i].value + ";");
        console.groupCollapsed();  ??
    }
      else if(!d[i].name == 'ajax')
        log(3, i + ": " + d[i].name + "=" + d[i].value);
    }
    console.groupEnd(); ??
}

var indexOfName=function(d, name) {
    for (var i in d) {
        if(d[i].name == name) {
            return i;
        }
    }
    return -1;
}


/*
 * Аналог AjaxCall для загрузки в Excel, но через GET в iframe wf
 *
 * query - запрос в URL-формате (param1=val1&param2=val2)
 * containerId - если задан, то запрос дополняется значениями input в этом контейнере.
 * значения параметров из query имеют приоритет - перекрывают значения из containerId, 
 * если там присутствуют такие же параметры.
 */
var getXL=function(query, containerId) {

  var data = [];
  var q = "of=xl";
  if(query && query.length > 0)
    q = q + "&" + query;
  log(3,"getXL: query='" + q + "'");
  if(containerId) {
    log(3,"getXL: containerId='" + containerId + "'");
    data = $("##"+containerId+" input, ##" +containerId+" textarea, ##"+containerId + " select" ).serializeArray();

    for(i=0; i<data.length; i++) {
      if(q.indexOf("&" + data[i].name + "=") === -1) {
        if(data[i].value){
          log(3,i + ": " + data[i].name + "=" + data[i].value);
          q = q + "&" + data[i].name + "=" + data[i].value;
        }
      }
    }
    log(3,"getXL: res. query='" + q + "'");
    frames["wf2"].window.location.href="#ServletPath#?" + q;
  }    
}


/**
 *
 */
var showLinked=function(event, id, img, report) {
  event.preventDefault();
  event.stopPropagation();
  if(img === "none") return false;
  var cont = $('#linked_' + report + id);
log(3,"showLinked:" + img + "; " + 'linked_' + report + id + "; display=" + cont.css('display'));
  if(cont.css('display') != 'none') cont.hide(100);
  else {
    AjaxCall('linked_' + report + id, 'c=docs/show_linked_docs&mode=list&doc_id=' + id, true);
    cont.show(300);
  }
  return false;
}


===============================================================================  ??
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ  ??
ZZZZZZZZZZZZZZZZZ  УСТАРЕЛО!!! НЕ ИСПОЛЬЗОВАТЬ!!! ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ  ??
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ  ??
===============================================================================  ??

/**
 * Ставим Обработчик события завершения всех AJAX-запросов на странице
 * Работает только при запуске запросов через JQuery!
 *   
 /

$( document ).ajaxStop(function() {
    log(1, "-----Ajax finished-----" );
    ajaxRunning=false;
    sendNextAjax();
});


/**
 * Посылка AJAX-запроса через JQuery.
 * По окончании запроса заносит полученный результат в target_div
 */
var sendAjax_JQuery=function(target_div, data_, showProgress) {
    var request = $.ajax({ url: "#ServletPath#", type: "POST", data:data_, dataType: "html" });
    if(showProgress)
        showLoading(true); 
    log(4,"sendAjax_JQuery: request sent. => " + target_div);
    request.done(function( msg ) { 
        log(1,"target_div=" + target_div); ??
        log(3,msg);  ??
        if(target_div != "-") $( "##" + target_div ).html( msg ); 
        setStandardEvents(); 
        if(showProgress) showLoading(false); 
    });
    request.fail(function( jqXHR, textStatus ) { if(showProgress) showLoading(false); alert( "Ошибка: " + textStatus ); });
}
/**/


/*
 * БЕЗ КРАЙНЕЙ НЕОБХОДИМОСТИ НЕ ИСПОЛЬЗОВАТЬ!
 * В большинстве случаев ЗАМЕНЕНО на AjaxCall!
 *
 * Submit document.theForm в заданный фрейм (если он указан)
 * Ставит в форме значения "cop", "c" (если они указаны)
 * Убирает диалоговое окно (если !keepDialog == true)
 * если cop="u" | "save", то перед сабмитом вызывается checkInput() для проверки корректности данных формы
 */
var doSubmit=function(cop, c, keepDialog, frame)
{
log(3,"doSubmit: c=" + c + "; frame=" + frame + ";");
	formChanged=false;
	frm=document.theForm;
  if(frame) frm.target=frame;
	if(c) module=c; ??Надо ли здесь? Похоже, что не надо!

	if(cop && (cop=='u' || cop=='save') && !checkInput($("[mand]"))) return; //проверка ввода
	if(c) {
		var c_Old = frm.c.value; //сохраняем старый "c"
		frm.c.value=c;
	}
	if(cop)	??
	 frm.cop.value=cop;
	log(3,c + " / " + cop); ??
	frm.submit();
	if (!keepDialog) HideDialog();
	if(c)	frm.c.value = c_Old;  //возвращаем c
	log(3,frm.c.value); ??
  frm.target="wf";
}


/* запоминаем текущий модуль для последующего вызова по SUBMIT формы */ ??
var setModule=function(m)
{
	if(m) { 
		module=m;
		document.theForm.c.value=module;
	}
}


/*  УСТАРЕЛО!!! НЕ ИСПОЛЬЗОВАТЬ!!!
 * Непосредственная загрузка URL в iframe
 */
function loadFrame(param, frame, host)
{ 
	alert(" loadFrame !!!!!");
}

/*
 * Возврат результатов из iframe (из модуля) в основной документ браузера
 *
 */
var getResult = function(div_ids, res, visibleOnly)
{
  if(div_ids && res) {
    var divs = div_ids.split(",");
    var i;
    for (i=0; i<divs.length; i++) {
      if(visibleOnly) {
        if( $("##"+divs[i]).is(':visible') ) {
          $("##"+divs[i]).html(res.innerHTML); 
        } 
        else
          $("##"+divs[i]).html(""); 
      }
      else {
        log(3, divs[i] + ": " + res.innerHTML); ??
        $("##"+divs[i]).html(res.innerHTML); 
      }
    }
    if(res.innerHTML) 
    { setStandardEvents(); 
      res.innerHTML = ""; ??
    }
    if (div_ids==="popupCont") centerDialog();
  } 
}

[end]


===============================================================================
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZ    НЕ ИСПОЛЬЗУЕТСЯ! ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
===============================================================================


/**
 * Посылка очередного AJAX-запроса через JQuery и загрузка его вывода в target_div
 * Ждет сброса флага ajaxRunning по событию ajaxStop (завершение всех AJAX-запросов со страницы)
 * Выбирает данные очередного запроса из очереди ajaxQueue и посылает запрос
 * По окончании запроса заносит полученный результат в target_div
 */
var ZZZ_sendNextAjax=function() {
    if(ajaxRunning) return;
    ajaxRunning = true;
    var target_div=ajaxQueue.shift();
    if(!target_div) {
        ajaxRunning = false;
        return;
    }
    var data_=ajaxQueue.shift();
    log(1,"sendNextAjax: =>" + target_div);
        data2log(data_);
    var showProgress = ajaxQueue.shift();

    var request = $.ajax({ url: "#ServletPath#", type: "POST", data:data_, dataType: "html" });
    log(4,"sendNextAjax: request sent. => " + target_div);
    request.done(function( msg ) { 
        log(1,"target_div=" + target_div); ??
        log (2, $( "##" + target_div ));  ??
        log(3,msg);  ??
        if(target_div != "-") $( "##" + target_div ).html( msg ); 
        setStandardEvents(); 
        if(showProgress) showLoading(false); 
    });
    request.fail(function( jqXHR, textStatus ) { if(showProgress) showLoading(false); alert( "Ошибка: " + textStatus ); });
}

/* 
НЕ СДЕЛАНО - ОЖИДАНИЕ завершения запросов.
var waitAjaxFinished=function() {

    if(!ajaxRunning) return;
    showLoading(true);

    for(i=0; i<10000; i++) {
        log(4,i); ??
        setProgress(i/12 + 1);
        if(!ajaxRunning) {i=10002; break;}
    }
    log(4,"waitAjaxFinished:" + ajaxRunning + " / " + i);
    showLoading(false);
}
/* */

var zzz_setProgress=function(ps){
    var max = $( "##progressbar" ).progressbar( "option", "max" );
    log(4, "PB: " + v + " / " + max + "; ps=" + ps);   ??
    var v = ps * max / 100;
    {
        $( "##progressbar" ).progressbar( "value", v );
    }
}

/**
 * AJAX-загрузка контента в target_div.
 * query - запрос в URL-формате (param1=val1&param2=val2)
 * Если force=TRUE, то запрос выполняется не зависимо от видимости target_div . 
 * Если force не задано или false, то запрос выполняется только если элемент target_div не скрыт.
 *
 * containerId - контейнер, откуда взять еще параметры запроса.
 * Берутся все непустые значения из input, textarea и select, находящихся в контейнере.
 * параметры, полученные в query имеют приоритет над параметрами из контейнера.
 *
 * Если showProgress=true, то выводится муляж прогресс бара.
 */

var AjaxCall_OLD=function(target_div, query, force, containerId, showProgress) {
    var data = [];
    var vis = false;
    if(typeof (force) == "boolean") vis = force;
    if(!vis) vis = $('##' + target_div).css('display') != 'none';
    if ( vis ) {
        if(showProgress)
            showLoading(true);

    ----- забираем параметры из контейнера ---- ??
        if(containerId) data = $("##"+containerId+" input, ##" +containerId+" textarea, ##"+containerId + " select" ).serializeArray();
    ----- выбрасываем параметры без значений ---- ??
        for(i=data.length-1; i>=0; i--) {
            if(!data[i].value) {
                data.splice(i, 1);
            }
        }
    ----- добавлям параметры из query ---- ??
        var params = query.split("&");
        for(i=0; i<params.length; i++){
            var p = params[i].split("=");
            var nam = p[0]; 
            var n = indexOfName(data, nam);     
            if(n >= 0) {  // если такой параметр уже есть - заменяем его значение
                log(2, "replace " + nam + ":" + data[n].value  + " => " + params[i] + "; ");  ??
                data[n] = {name:p[0], value:p[1]}; 
            }
            else
                data.push({name:p[0], value:p[1]});
        }

        data.push({name:"ajax", value:"Y"});


        log(2,"AjaxCall=>'" + target_div + "'"); 

        data2log(data);

        var request = $.ajax({ url: "#ServletPath#", type: "POST", data:data, dataType: "html" });
        request.done(function( msg ) { 
            log(1,"target_div=" + target_div); ??
            log (2, $( "##" + target_div ));  ??
            log(3,msg);  ??
            if(target_div) $( "##" + target_div ).html( msg ); 
            setStandardEvents(); 
            if(showProgress) showLoading(false);
        });
        request.fail(function( jqXHR, textStatus ) { if(showProgress) showLoading(false); alert( "Ошибка: " + textStatus ); });
    }
    return vis;
}



ВЕРСИЯ С РЕАЛЬНЫМ ПРОГРЕССБАРОМ ЗАГРУЗКИ РЕЗУЛЬТАТА
Не используется, т.к. сервер должен ставить реальный header content_length

/*
 * AJAX-загрузка контента в target_div.
 * query - запрос в URL-формате (param1=val1&param2=val2)
 * Запрос выполняется если force=TRUE. 
 * Если force не задано или не boolean, то запрос выполняется, если элемент target_div не скрыт.
 */
var AjaxCall=function(target_div, query, force, containerId, showProgress) {

  var data = [];
  var vis = false;
  if(typeof (force) == "boolean") vis = force;
  if(!vis) vis = $('##' + target_div).css('display') != 'none';
  if ( vis ) {
    log(3,"AjaxCall: " + $('##' + target_div).css('display')); ??
    log(3,"AjaxCall: " + target_div + " / " + query); ??

    if(target_div !== "d_tooltip" ??
      && target_div !== "field_property_panel" ??
      && target_div !== "doctype_form_panel" ??
      && target_div !== "toolbar_panel" ??
    ) ??
    if(showProgress)
        showLoading(true);

    if(containerId) data = $("##"+containerId+" input, ##" +containerId+" textarea, ##"+containerId + " select" ).serializeArray();
    var params = query.split("&");
    for(i=0; i<params.length; i++){
        var p = params[i].split("=");
        data.push({name:p[0], value:p[1]});
    }
    data.push({name:"ajax", value:"Y"});
    log(3,"AjaxCall showProgress=" + showProgress); data2log(data);

    var request = $.ajax({ url: "#ServletPath#", type: "POST", data:data, dataType: "html"
, 	xhr: function()
	{
		var xhr = new window.XMLHttpRequest();
		// прогресс загрузки на сервер
		xhr.upload.addEventListener("progress", function(evt){
			if (evt.lengthComputable) {
				var percentComplete = 100 * evt.loaded / evt.total;
		// делать что-то...
				log(3,"ajax: =>" + percentComplete + "%;");
                    if(showProgress) {increaseProgress(10);}
			}
		}, false);

		// прогресс скачивания с сервера
 xhr.addEventListener("progress", function(evt) {
log(3,"ajax: evt.lengthComputable=" + evt.lengthComputable);
           if (evt.lengthComputable) {
               var percentComplete = evt.loaded / evt.total;
               log(3,"ajax: <=" + percentComplete + "%;");
           }
       }, false);
		return xhr;
	}
    });
    request.done(function( msg ) { if(target_div) $( "##" + target_div ).html( msg ); 
        log(3,msg); ??
        setStandardEvents(); 
        if(showProgress) showLoading(false);
    });
    request.fail(function( jqXHR, textStatus ) { if(showProgress) showLoading(false); alert( "Ошибка: " + textStatus ); });
  }

  return vis;
}

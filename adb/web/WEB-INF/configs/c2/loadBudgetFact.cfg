[parameters]
service=jinr.adb.ServiceCopyPlat ??
service=jinr.adb.ServiceCopyRecordset
KeepLog=true
InsertSQL=insert into #dest_table# (#destFields#) values (#qList#)
numBatch=500
[end]


PROCESSING:
1. out [report header]
2. out [prepare data]
3. parse [fields] => srcFields, destFields, qList
4. doCopy: srcSQL => InsertSQL
5. out [report footer]


[fields]
Период=dat
Регистратор=Registrator
ВидДвижения=VidDvizhenia
ПериодПланирования=PlanDat
Сценарий=Scenarii
КонтролируемаяСтатьяОборотов=ContStOborotov
СтатьяОборотов=stOborotov
КонтролируемоеЦФО=ContCFO
ЦФО=CFO
Проект=Project
ДокументПланированияПлатежа=Request
ДетализацияПроекта=ProjectDet
СуммаВРублях=S_RUB
Валюта=CURR
Курс=Rate
СуммаВВалюте=S_Curr
CAST(Приказ AS INT)=Prikaz_ID
ОтчетныйПериод=ReportDat
CAST(АДБ AS INT)=ADB_NR
[end]

case when ВидДвижения='Расход' then 0 else 1 end=isPrihod

CAST(Номер AS INT)=NR


======================= STANDARD PART =================
$SET_PARAMETERS destCriteria=YEAR=20#q_yr# 	
$SET_PARAMETERS srcCriteria=Год=20#q_yr# and countkey>333000 

[report header]
$INCLUDE [setCriteria]
$SET_PARAMETERS ERROR=; GET_DATA_ERROR=;
loadBudgetFact.cfg:
$INCLUDE c2/copyData.cfg[report header]
destCriteria=#destCriteria#; ??
[end]


[setCriteria]
$SET_PARAMETERS destCriteria=; 
$SET_PARAMETERS srcCriteria=(year(Период)=20#q_yr# or year(ПериодПланирования)=20#q_yr#); ??
$SET_PARAMETERS srcCriteria=year(ПериодПланирования)=20#q_yr# and ВидДвижения='Расход'; 
$SET_PARAMETERS src_table=[1c8_2].[БюджетФакт20#q_yr#]; dest_table=C2_BudgetFact_#q_yr#
[end]

[report footer]
$INCLUDE c2/copyData.cfg[report footer]
ERROR: #ERROR#	??ERROR

<br>Простановка кодов...  ??!ERROR&!GET_DATA_ERROR&!ImportDataError
$GET_DATA [setFields] ??!ERROR&!GET_DATA_ERROR&!ImportDataError
ОК  ??!ERROR&!GET_DATA_ERROR

Корректировка номеров ADB2...  ??!ERROR&!GET_DATA_ERROR&!ImportDataError
$GET_DATA [fixAdb2Docs] ??!ERROR&!GET_DATA_ERROR&!ImportDataError
ОК  ??!ERROR&!GET_DATA_ERROR

Пересчет валюты...  ??!ERROR&!GET_DATA_ERROR&!ImportDataError
$GET_DATA [setCurrency] ??!ERROR&!GET_DATA_ERROR&!ImportDataError
ОК  ??!ERROR&!GET_DATA_ERROR
<br><hr>
$CALL_SERVICE c=c2/setDocsFact ??
<p>
GET_DATA_ERROR: #GET_DATA_ERROR# ??GET_DATA_ERROR
$INCLUDE [protokol] ??
$GET_DATA [protokol] ??
#ERROR#<br>#GET_DATA_ERROR#
$SET_PARAMETERS ERROR=; GET_DATA_ERROR=;
[end]



[prepare data]
[end]

[srcSQL]
$USE_DB 1C
select 	#srcFields# from #src_table#
where #srcCriteria#  ??srcCriteria
[end]

[start copy]
$INCLUDE c2/copyData.cfg[start copy]
[end]


==============================================================
[fixAdb2Docs]
update #dest_table# p
set ADB_NR=(select ADB2_NUM from c2_req_corr c where c.REQ=p.Request_Nr and c.YR=to_char(p.REQUEST_DAT,'YY') )
where exists (select cc.REQ from c2_req_corr cc where cc.REQ=p.Request_Nr and cc.YR=to_char(p.REQUEST_DAT,'YY') 
and not cc.OLD_ADB2_NUM is null
and not cc.ADB2_NUM is null ??
)
[end]


[setFields]
update #dest_table# set 
  isPrihod=case when VidDvizhenia='Приход' then 1 else 0 end
, isBudget=case when Scenarii='Бюджет' then 1 else 0 end
;
update #dest_table# set
 Request_Nr=to_number(trim(regexp_substr(REQUEST,'[[:space:]][[:digit:]]+[[:space:]]',20)))
,Request_Dat=to_date(regexp_substr(REQUEST,'[[:space:]]([[:digit:]]{2}\.){2}[[:digit:]]{4}',30),'DD.MM.YYYY')
where REQUEST like 'Заявка на расход%'
;

update #dest_table# set 
  REG_NR=to_number(regexp_substr(REGISTRATOR,'[[:space:]][[:digit:]]+[[:space:]]',7))
, REG_DAT=to_date(regexp_substr(registrator,'[[:digit:]]{2}(\.)[[:digit:]]{2}(\.)[[:digit:]]{4}',20),'dd.mm.yyyy')
;
update #dest_table# set REG_TYPE='ППИ'
where REGISTRATOR like 'Платежное поручение%'
;
update #dest_table# set REG_TYPE='РКО'
where REGISTRATOR like 'Расходный кассовый ордер%'
;
update #dest_table# set REG_TYPE='КЗР'
where REGISTRATOR like 'Корректировка заявки на расходование средств%'
;
update #dest_table# set REG_TYPE='Руч.затраты'
where REGISTRATOR like 'Ручные затраты по бюджету%'
;
update #dest_table# set REG_TYPE='Загрузка данных'
where REGISTRATOR like 'Загрузка данных по обособленным подразделениям%'
;
update #dest_table# set REG_TYPE='Взаиморасчеты'
where REGISTRATOR like 'Взаиморасчеты%'
;
update #dest_table# p set SBJ=(select DES from C2_PROJECTS d where d.id=p.Project)
;
update #dest_table# p set DIV_CODE=(select LAB_CODE from C2_DIV d where to_number(d.id)=to_number(p.CFO))
;
update #dest_table# p set DIV_CODE=100 where DIV_CODE in (111)
;
update #dest_table# p set DIV_CODE=200 where DIV_CODE in (208,209)
;
update #dest_table# p set DIV_CODE=400 where DIV_CODE in (431,432,441,442)
;
update #dest_table# p set DIV_CODE=500 where DIV_CODE in (801)
;
update #dest_table# p set DIV_CODE=990 where DIV_CODE in (#INFR_CODES#) 
update #dest_table# p set DIV_CODE=990 where DIV_CODE is null; ??
;

update #dest_table# p set AGGR=(select AGGR from C2_STATI_B d where d.id=to_number(p.stOborotov))
;
update #dest_table# p set 
 PRIKAZ=(select NOMER||' от '||to_char(DAT,'DD.MM.YYYY') from C2_PRIKAZ d where d.id=p.Prikaz_ID)  ??
 PRIKAZ=(select NOMER from C2_PRIKAZ d where d.id=p.Prikaz_ID)
,	Prikaz_Dat=(select DAT from C2_PRIKAZ d where d.id=p.Prikaz_ID)
 , punkt=(select PUNKT from C2_PRIKAZ d where d.id=p.Prikaz_ID)
;
update #dest_table# f
set prikaz_adb2_id=(select ID from i_prikaz i where i.num=f.Prikaz and i.Dat=f.Prikaz_Dat)
where f.prikaz is not null and f.prikaz>0
;

update #dest_table# set ProjectDet=trim(ProjectDet) where ProjectDet is not null
;
update #dest_table# r set r.nica_code=trim(REGEXP_SUBSTR(r.ProjectDet,'^([[:digit:]]{1,2}(\.)){1,3}[[:digit:]]{1,2}( )') )
where r.ProjectDet is not null
;
update #dest_table# r set r.nica_id=(select d.project_id from docs d where d.doc_id=r.ADB_NR and not d.project_id is null and d.project_id>0) where r.ADB_NR>10000
;
update #dest_table# r set r.nica_id=(select id from nica_wbs_wu w where w.active=1 and w.code=r.NICA_CODE) 
where r.ProjectDet is not null
and r.nica_id is null
; 

+++++++++ Detect STORNO and set flag +++++++++ ??
update #dest_table# f set f.STORNO=0
;
update #dest_table# f set f.STORNO=1
where f.ROWID in
( select f1.ROWID
	from #dest_table# f1 join #dest_table# f2
		on
			f1.REQUEST=f2.REQUEST
			and f1.VIDDVIZHENIA=f2.VIDDVIZHENIA
			and f1.PLANDAT=f2.PLANDAT
			and f1.SCENARII=f2.SCENARII
			and f1.CONTSTOBOROTOV=f2.CONTSTOBOROTOV
			and f1.STOBOROTOV=f2.STOBOROTOV
			and f1.CONTCFO=f2.CONTCFO
			and f1.CFO=f2.CFO
			and f1.DIV_CODE=f2.DIV_CODE
			and f1.PROJECT=f2.PROJECT
			and f1.S_RUB=-f2.S_RUB
)

[end]


[setCurrency]
update #dest_table# set curr_code=decode(curr, 'руб.', 810, 'USD', 840, 'EUR', 978, 0)
;
update #dest_table# set s_USD=s_CURR where curr_code=840;
;
update #dest_table# set s_EUR=s_CURR where curr_code=978;
;
update #dest_table# p
set s_USD=s_rub/(select curr_rate from I_RATE_DESC where d_dat<=p.REG_DAT and curr_code=840 and rownum=1)
where curr_code <> 840
and #destCriteria# ??destCriteria
;

update #dest_table# p
set s_EUR=s_rub/(select curr_rate from I_RATE_DESC where d_dat<=p.dat and curr_code=978 and rownum=1)
where curr_code <> 978
and #destCriteria# ??destCriteria
;
[end] 

ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ
************ УБРАНО, т.к. не для всех записей находится исходник. НУЖНО ПЕРЕСМОТРЕТЬ ****************
+++++++++ Поправим валюту для КЗР (если был полный перенос +++++++++ ??
update #dest_table# f
set f.s_usd = (select s_usd from #dest_table# ff 
		where ff.REQUEST=f.REQUEST and ff.S_RUB=f.S_RUB and ff.REG_TYPE<>'КЗР'
	)
, f.s_eur = (select s_eur from #dest_table# ffe 
		where ffe.REQUEST=f.REQUEST and ffe.S_RUB=f.S_RUB and ffe.REG_TYPE<>'КЗР'
	)
where
f.rowid in (select f1.rowid from #dest_table# f1
	join C2_BudgetFact f2 on
		f1.REQUEST=f2.REQUEST
		and f1.S_RUB=f2.S_RUB
		and f1.REG_TYPE='КЗР'
		and f2.REG_TYPE<>'КЗР'
)

[end]


[protokol]
$USE_DB
;
select to_char(max(REG_DAT), 'DD.MM.YYYY') as LAST
, to_char(count(*)) as COUNTER 
, to_char(SUM(S_RUB)) as S_RUB 
from #dest_table#
;
insert into c2_protokol (dat, tab, err, last, COUNTER, S_RUB)
values(SYSDATE,'#dest_table#', substr('#ERROR#',1,1023), to_date('#LAST#','DD.MM.YYYY'), #COUNTER#, #S_RUB#);
[end]

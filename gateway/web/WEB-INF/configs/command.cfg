command.cfg

[comments]
descr=S: Обработка команды
input=http-запрос от клиента с командой
output=
parents=.
childs=put_object, get_new_object, get_object, register_object, delete_object, undelete_object
test_URL=
author=Куняев
[end]


[description]
<b>Обработка http-запроса от клиента</b><br>
<ol>
<li>Загрузка в память типов объектов, клиентов и их подписки, если это не было сделано раньше  (svs/get_clients.cfg)</li>
<li>Проверка типа полученного объекта, если он пришел в запросе [checkObjectType]</li>
<li>Проверка клиента, установка его параметров и списка подписчиков на тип объекта [checkClient]</li>
<li>Обработка команды (вызов соответствующего модуля - [process command]) :
<ul>
<li>PutObject => put_object.cfg</li>
<li>GetNewObject => get_new_object.cfg</li>
<li>GetObject => get_object.cfg</li>
<li>RegisterObject => register_object.cfg</li>
<li>DeleteObject => delete_object.cfg</li>
<li>UnDeleteObject => undelete_object.cfg</li>
</ul>
</li>
<li>Если в шагах 2-4 была ошибка – вывод ответа клиенту [ERROR]</li>
</ol>
[end]

[parameters]
request_name=S:Обработка команды
LOG=ON
[end]


[report] *** ГОЛОВНАЯ СЕКЦИЯ
$SET_PARAMETERS Ver=1; ??!Ver
$CALL_SERVICE c=svs/get_clients; ??!OBJECT_TYPES
$LOG9 queryString=#queryString#<hr> 
$LOG1 <hr>command.cfg<br><b>REQUEST: ClientID=#ClientID#(#ClientIP#); Command=#Command#; ObjectType=#ObjectType#; ClientObjectID=#ClientObjectID#; GateObjectID=#GateObjectID#; Time=#Time#;</b><br> 
  object=#Object#;<br> ??
$SET_PARAMETERS ARRAYS=Товары,Услуги,РасшифровкаПлатежа,РаботникиОрганизации,ФизическиеЛица,ПерсональныеДанные,Образование,Награды,Стаж,ОсновныеНачисления,src_type_id;

$INCLUDE [checkObjectType]  ??ObjectType
$INCLUDE [checkClient]          ??!ERROR
$INCLUDE [process command]      ??!ERROR
$INCLUDE [ERROR]  ??ERROR
[end]


[process command] *** Вызов нужного обработчика команды
$SET_PARAMETERS ResultCode=1; ERROR=Неверная команда: #Command#; 
===== Вызываем нужный обработчик (он и сбросит ошибку) ===== ??
$CALL_SERVICE c=put_object;       ??Command=PutObject
$CALL_SERVICE c=get_new_object;   ??Command=GetNewObject
$CALL_SERVICE c=get_object;       ??Command=GetObject
$CALL_SERVICE c=register_object;  ??Command=RegisterObject
$CALL_SERVICE c=delete_object;    ??Command=DeleteObject
$CALL_SERVICE c=undelete_object;  ??Command=UnDeleteObject
[end]


[ERROR] *** Сообщение об ошибке
{"ResultCode":"#ResultCode#", "Result":"#ERROR#"
,"DestObjectID":"#GW_ID#" ??GW_ID
}
$LOG1 === RESPONCE to source: {"ResultCode":"#ResultCode#", "Result":"#ERROR#" ,"DestObjectID":"#GW_ID#"};<br> 
$GET_DATA [register error]
$SET_PARAMETERS ResultCode=; ERROR=; 
[end]


[register error]
insert into err_log 
(SrcClientId, ObjectType, ObjectTime, ClientObjectId, Object, uploaded, ClientIP, Command, ResultCode, Result, ver)
values ('#ClientID#', '#ObjectType#', '#Time#', '#ClientObjectID#', '#Object#', now(), '#ClientIP#', '#Command#'
, #ResultCode# ??ResultCode
, null ??!ResultCode
, left('#ERROR#',255), #Ver#)
[end]


================================================================================
========= Проверки корректности объекта, прав доступа клиента, 
========= получение списка подписчиков
================================================================================

[checkObjectType] *** Проверка, зарегистрирован ли тип объекта
===== Проверка типа полученного объекта, если он пришел в запросе ??
$SET_PARAMETERS ResultCode=1; ERROR=Тип объекта `#ObjectType#` не зарегистрирован! Команда игнорирована.; GW_ID=;
$EXECUTE_LOOP next_type; #OBJECT_TYPES#; [check next type]
[end]

[check next type] 
$SET_PARAMETERS ResultCode=; ERROR=; ??ObjectType=#next_type#
[end]


[checkClient] *** Проверка клиента, установка его параметров и списка подписчиков на тип объекта
$SET_PARAMETERS tmp=encoding_#ClientID#;
$SET_PARAMETERS CLIENT_ENCODING=^#tmp#;
$CALL_SERVICE c=svs/get_clients; ??!CLIENT_ENCODING
$SET_PARAMETERS CLIENT_ENCODING=^#tmp#; ??!CLIENT_ENCODING
$SET_PARAMETERS tmp=ip_#ClientID#;
$SET_PARAMETERS CLIENT_IP_REG=^#tmp#;

$SET_PARAMETERS tmp=receivers_#ObjectType#;
$SET_PARAMETERS RECEIVERS=^#tmp#;

$SET_PARAMETERS IS_GW=Y; ??ClientIP=159.93.40.211|ClientIP=159.93.33.203|ClientIP=159.93.33.202|ClientIP=159.93.33.209
$SET_PARAMETERS IS_GW=Y; ??ClientIP=159.93.146.31|ClientIP=159.93.146.31
$SET_PARAMETERS IS_GW=Y; ??ClientIP=127.0.0.1|ClientIP=10.0.2.2

$LOG1 +++ checkClient: IS_GW=#IS_GW#; ClientID=#ClientID#; CLIENT_IP_REG=#CLIENT_IP_REG#(#ClientIP#); CLIENT_ENCODING=#CLIENT_ENCODING#; RECEIVERS=#RECEIVERS#;<br> 

$SET_PARAMETERS ResultCode=1; ERROR=Отказано в доступе;  ??!ClientIP=#CLIENT_IP_REG#&!IS_GW=Y

$SET_PARAMETERS ResultCode=1; ERROR=Отсутствует параметр ClientID;  ??!ClientID
$SET_PARAMETERS ResultCode=1; ERROR=Неверный параметр ClientID=#ClientID#; ??!CLIENT_ENCODING

$INCLUDE command.cfg[check src] ??!ERROR&Command=PutObject|Command=DeleteObject|Command=UnDeleteObject
$INCLUDE command.cfg[check receiver] ??ObjectType>0&!ERROR&Command=GetObject|Command=RegisterObject
[end]


[check src] *** Проверка, является ли клиент источником этого типа объекта 
$SET_PARAMETERS tmp=source_#ObjectType#;
$SET_PARAMETERS OBJECT_SRC=^#tmp#;
$SET_PARAMETERS ResultCode=1; ERROR=Отказано в доступе к объекту #ObjectType#;  ??!ClientID=#OBJECT_SRC#&!IS_GW=Y
[end]


[check receiver] *** Проверка, является ли клиент подписчиком на этот тип объекта 
$SET_PARAMETERS ResultCode=1; ERROR=Отказано в доступе к объекту #ObjectType#; 
$EXECUTE_LOOP OBJECT_RECEIVER; #RECEIVERS#; [next receiver];
[end]

[next receiver]
$SET_PARAMETERS ResultCode=; ERROR=;  ??ClientID=#OBJECT_RECEIVER#
[end]

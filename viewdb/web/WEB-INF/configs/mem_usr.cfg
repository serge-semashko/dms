[parameters]

[end]

[report]
$SET_PARAMETERS TYPES=<option value=''>--- No Objects ---; ALL_TYPES= ??!ALL_TYPES&!TYPES
$SET_PARAMETERS srn=1 ??!srn
$SET_PARAMETERS rpp=100 ??!rpp|rpp=10

<p><table border=1 cellpadding=8 cellspacing=0><tr><td class=light nowrap=true>
Object Owner:<SELECT NAME="f_orauser" onChange="getTypes();"><option>PUBLIC#OWNERS#</SELECT> ??!DirectOraUser
Object Type:<SELECT NAME="f_objtype" onChange="resetSrt();">#ALL_TYPES##TYPES#</SELECT>&nbsp;
Object name contains: <input name=f_name size=20 value='#f_name#'>  ??DirectOraUser
<input type=submit class=but value="  Fetch  " onClick="doSubmit();">
<br>Object name contains: <input name=f_name size=20 value='#f_name#'> ??!DirectOraUser
</td></tr></table><p>

<script>
var frm=document.theForm;
frm.submit(); ??!f_orauser

function getTypes()
{ frm.doIt.value="";
  frm.srn.value=1;
  frm.submit();
}
function resetSrt()
{ frm.nosrt.value="yes";
}

function doSubmit()
{ frm.doIt.value="y";
  frm.srn.value=1;
  frm.submit();
}

function recomp()
{ openWindow("c=mem_usr_recomp&db=#db#&orauser=#f_orauser#"    
    , 600, 500, "Recompile");
}
selectOptionByVal(frm.f_orauser, '#f_orauser#');    ??f_orauser
selectOptionByVal(frm.f_objtype, '#f_objtype#');  ??f_objtype
</script>

$CALL_SERVICE #f_objtype#  ??f_objtype&doIt
#CALL_SERVICE_ERROR#  ??CALL_SERVICE_ERROR

</td></tr>

<tr><td><table width=100%><tr><td bgcolor=303060>
<font color=white><i>&nbsp;&nbsp;
Rows Per Page:  ??NumTableRows
Get Top Rows:   ??!NumTableRows
<SELECT NAME="rpp" onChange="doSubmit();"><OPTION> 25<OPTION> 100<OPTION VALUE="99999">no limit</SELECT> &nbsp; &nbsp;
Rows:</i> #rowLinks# | ??NumTableRows
</td></tr></table>
<script>
selectOptionByVal(frm.rpp, "#rpp#");  ??rpp
</script>

$INCLUDE headers.dat[Footer_HTML] ??
[end]

$SET_PARAMETERS srt=1; desc=; ??!srt|nosrt
;
SELECT '<option >'||username as OWNERS 
FROM sys.dba_users 
where username in (select distinct owner from sys.dba_objects) ??
ORDER BY username
;

[preSQLs]
SELECT '<option >'||username as OWNERS FROM sys.dba_users ORDER BY username; ??!DirectOraUser
$SET_PARAMETERS f_orauser=#DirectOraUser#;  ??DirectOraUser
where username in (select distinct owner from sys.dba_objects) ??

$INCLUDE [types script]  ??f_orauser&!f_orauser=PUBLIC
$INCLUDE [public script]  ??f_orauser&f_orauser=PUBLIC

[end]

[types script]
select '<option value="c=mem_usr_other">--- All objects ('
  ||count(object_name)||') ---' as ALL_TYPES
FROM sys.dba_objects
WHERE 
  owner='#f_orauser#'
  AND object_type <> 'PACKAGE BODY' ??
;

select 
  '<option value="'||
  decode(
$INCLUDE [decode1]
    ,'TABLE','c=mem_usr_table;'
    ,'SYNONYM','c=mem_usr_synonym;'
    ,'VIEW','c=mem_usr_view;'
    ,'INDEX','c=mem_usr_indx;'
    ,'PL/SQL object','c=mem_usr_plsql;'
    ,'DATABASE LINK','c=mem_usr_dblink;'
    ,'MATERIALIZED VIEW','c=mem_usr_mview;'
    ,'c=mem_usr_other;t='||max(object_type))||'">'||
$INCLUDE [decode1]
      ||' ('||count(object_name)||')' as TYPES
  , count(object_name)
FROM sys.dba_objects
WHERE 
  owner='#f_orauser#'
  and not owner='SYS' ??f_orauser=PUBLIC
  AND object_type <> 'PACKAGE BODY' ??

GROUP BY
$INCLUDE [decode1]
ORDER BY 1
;
[end]

[public script]
select '<option value="c=mem_usr_synonym">SYNONYM ('
  ||count(SYNONYM_NAME)||')' as ALL_TYPES
FROM sys.dba_synonyms
WHERE 
  owner='PUBLIC'
  AND TABLE_OWNER <> 'SYS'
;

select count(db_link) as DB_LINKS
FROM sys.dba_db_links
WHERE  owner='PUBLIC'
;
$SET_PARAMETERS TYPES=<option value="c=mem_usr_dblink">DATABASE LINK (#DB_LINKS#)  ??DB_LINKS&!DB_LINKS=0
;
[end]
select '<option value="c=mem_usr_dblink">DATABASE LINK ('
  ||count(db_link)||')' as TYPES
FROM sys.dba_db_links
WHERE 
  owner='PUBLIC'
;

select l.db_link, l.host, l.username, to_char(l.CREATED, 'dd/mm/yyyy hh24:mi') as CREATED
, '<center>'||decode(STATUS,'VALID',STATUS,'<font color=red><b>'||STATUS) as STATUS
, '<center>'||TEMPORARY as TEMPORARY

FROM sys.dba_db_links l, dba_objects o
WHERE
l.owner=o.owner and l.db_link=o.object_name
AND l.owner='#f_orauser#'   ??f_orauser

[end]

[decode1]
    decode(object_type
      ,'TRIGGER','PL/SQL object'
      ,'PACKAGE','PL/SQL object'
      ,'PACKAGE BODY','PL/SQL object'
      ,'FUNCTION','PL/SQL object'
      ,'PROCEDURE','PL/SQL object', object_type)
[end]


[parameters]
debug=off
$INCLUDE admin.cfg[parameters]
[end]

[report]
$SET_PARAMETERS inst_id=; CURR_INST_ID=; ??cop=DEL
$SET_PARAMETERS UPDATE_OK=Y ??!LABEL_EXISTS&!INST_EXISTS

$INCLUDE admin.cfg[svsframe header]
<input type=hidden name="inst_id" value="#inst_id#">
<input type=hidden name="newInst" value="#newInst#">
Label: <input name="inst_label" value="#inst_label#"
size=40 class=ro readonly ??RO
size=22><p>
Connection parameters for this instance are updated automatically:<br>  ??RO
&nbsp;Host: <input size=16 name="ihost" value="#ihost#"
class=ro readonly ??RO
>
Port: <input size=6 name="iport" value="#iport#"
class=ro readonly ??RO
>
SID: <input name="SID" value="#SID#"
size=12 class=ro readonly ??RO
size=8>
<input  type=hidden name="CURR_INST_ID" value="#CURR_INST_ID#" readonly=true>
<p><center><input type=checkbox name=directAccess
checked ??PUBLIC_ACCESS=1
> Allow direct ORACLE Authentication
<p>
$INCLUDE [buttons]
<br>#alertImg# Instance <b>"#newInst#"</b> already registered!<br>    ??INST_EXISTS
<br>#alertImg# Instance with the label <b>"#inst_label#"</b> already registered! ??LABEL_EXISTS
#okImg# OK!<br>    ??UPDATE_OK&cop=ADD|cop=U

<iframe id="tstfr" src="#imgPath#svsframe.html" width=100% height=190 frameBorder=no scrolling=auto>
</iframe>

</td><td valign=top nowrap=true>&nbsp;

<script>
top.refrSelf();   ??UPDATE_OK&cop=ADD|cop=U|cop=DEL
var frm=document.theForm;
var tstFrame = document.getElementById("tstfr");

function doTest()
{ if (!checkFields()) return;
  var newInst=frm.ihost.value + ":" + frm.iport.value + ":" + frm.SID.value;
  tstFrame.src = "#ServletRoot##ServletPath#?c=adm_inst_test&new_db=y&db="
    + newInst + "&newInst=" + newInst + "&tm=" + (new Date()).getTime(); 

}

function doUpdate()
{ frm.newInst.value=frm.ihost.value + ":" + frm.iport.value + ":" + frm.SID.value;
  if (!checkFields()) return;
  frm.cop.value="U";
  frm.submit();
}

function doAdd()
{ frm.newInst.value=frm.ihost.value + ":" + frm.iport.value + ":" + frm.SID.value;
  if (!checkFields()) return;
  frm.cop.value="ADD";
  frm.submit();
}


function deleteInst(instId)
{ if (confirm("Are you sure you want to delete #inst_label# (#newInst#) \n\rfrom the ViewDB repository?")) 
  { frm.cop.value="DEL";
    frm.submit();
  }
}

function checkFields()
{ if (frm.ihost.value.length < 1) 
  { alert ("Please, specify host name");
    return false;
  }
  if (frm.iport.value.length < 1)
  { alert ("Please, specify port number");
    return false;
  }
//  alert ((/[0-9]/).test(frm.iport.value));
  if (!(/[0-9]/).test(frm.iport.value))
  { alert ("Port must be a number");
    return false;
  }

  if (frm.SID.value.length < 1) 
  { alert ("Please, specify SID");
    return false;
  }
  if (frm.inst_label.value.length < 1) 
  { frm.inst_label.value = frm.newInst.value;
  }
  return true;
}

function parseConnStr(str)
{ var p = str.split(":");
  frm.ihost.value = p[0];
  frm.iport.value = p[1]; 
  frm.SID.value  = p[2];
}
parseConnStr("#newInst#")  ??cop=e

</script>
[end]

[buttons]
<table border=0 cellpadding=4><tr><td>
$INCLUDE headers.dat[cbutton] param: id=tst; func=doTest(); label=Test;
</td><td>
$INCLUDE headers.dat[cbutton] param: id=add; func=doAdd(); label=Add; ??cop=a|cop=ADD
$INCLUDE headers.dat[cbutton] param: id=upd; func=doUpdate(); label=Update; ??CURR_INST_ID
</td><td>
$INCLUDE headers.dat[cbutton] param: id=del; func=deleteInst(); label=Delete; ??CURR_INST_ID&!RO
$INCLUDE headers.dat[cbutton] param: id=del; func=deleteInst(); label=Delete; disabled=y; ??CURR_INST_ID&RO
</td><td>
$INCLUDE headers.dat[cbutton] param: id=canc; func=doCancel(); label=Cancel;
</td></tr></table>
[end]


[preSQLs]

$INCLUDE [get script]     ??cop=e
$INCLUDE [add script]     ??cop=ADD
$INCLUDE [delete script]  ??cop=DEL&CURR_INST_ID
$INCLUDE [update script]  ??cop=U&CURR_INST_ID
$INCLUDE [refr inst list] ??cop=U|cop=ADD|cop=DEL
[end]


[get script]
select INSTID as CURR_INST_ID, CONN_STR as "newInst"
, SERVICE as "inst_label", PUBLIC_ACCESS 
, decode(TYPE,1,'Y','') as RO
from instances where INSTID='#inst_id#';
[end]

[delete script]
delete from INST_ACC_RIGHTS where INSTID='#CURR_INST_ID#';
delete from instances where INSTID='#CURR_INST_ID#'; 
[end]

[add script]
select 'Y' as LABEL_EXISTS from instances where upper(SERVICE)=upper('#inst_label#');
select 'Y' as INST_EXISTS from instances where upper(CONN_STR)=upper('#newInst#');
$INCLUDE [insert SQL]  ??!LABEL_EXISTS&!INST_EXISTS
[end]

[insert SQL]
insert into instances 
 (INSTID, CONN_STR, SERVICE, TYPE, PUBLIC_ACCESS) values
 ('#tm#', '#newInst#', '#inst_label#', 0
 ,1 ??directAccess=on
 ,0 ??!directAccess=on
 );
[end]

[update script]
select 'Y' as LABEL_EXISTS from instances where upper(SERVICE)=upper('#inst_label#') and INSTID<>'#CURR_INST_ID#';
select 'Y' as INST_EXISTS from instances where upper(CONN_STR)=upper('#newInst#') and INSTID<>'#CURR_INST_ID#';
$INCLUDE [update SQL]  ??!LABEL_EXISTS&!INST_EXISTS
[end]

[update SQL]
update instances set CONN_STR='#newInst#', SERVICE='#inst_label#' 
 ,PUBLIC_ACCESS=1 ??directAccess=on
 ,PUBLIC_ACCESS=0 ??!directAccess=on
where INSTID='#CURR_INST_ID#';
[end]

[refr inst list]
try: SELECT
'<option value="'||CONN_STR||'">'
  || decode(type,0,'* ','')||service as DBLIST FROM INSTANCES 
ORDER BY type,service;

$SET_PARAMETERS_GLOBAL dbList=#DBLIST#  ??DBLIST
;
[end]

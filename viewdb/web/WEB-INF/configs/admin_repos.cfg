[parameters]
service=dubna.walt.service.Service
debug=on
[end]


[report]
$INCLUDE [set master]     ??conn_str_repos=#repository#
$INCLUDE [set secondary]   ??conn_str_repos=#repository_2#

<table border=0 cellpadding=2 cellspacing=0 width=100%>
<tr><td colspan=2 class=label nowrap=true background="#imgPath#bbackgr.gif">
<b>Current repository: "#TNS#"</b> 
(#conn_str_repos#) (#currRepType#). ??conn_str_repos
<font color=red><b>Not defined!    ??!conn_str_repos
<b>Alternative repository: "#TNSother#"</b>
(#otherRepos#) (#otherRepType#)  ??otherRepos
<font color=red><b>Not defined!  ??!otherRepos
</td></tr>

<tr><td valign=top width=50% class=label nowrap=true>

<ul style="margin:5;">
<table border=0><tr><td class=label nowrap=true>

<li>
<b>Test</b> the alternative repository (<b>"#TNSother#"</b>).<br> 
(Check if there is a valid ViewDB repository tables<br>
on the instance "#TNSother#".)<p>
</td><td>
$INCLUDE headers.dat[cbutton] param: id=1; func=testRepos(); label=Test...; disabled=#DIS#;
</center>
</td></tr>

<tr><td class=label nowrap=true>

<li><b>Switch</b> to the alternative repository (<b>"#TNSother#"</b>).<br> 
(Force ViewDB to use alternative repository
instead of<br> the current one until the ViewDB servlet restarts).<p>
</td><td>
$INCLUDE headers.dat[cbutton] param: id=2; func=switchRepos(); label=Switch...; disabled=#DIS#;
</td></tr>

<tr><td class=label nowrap=true>
<li><b>Export</b> the <b>current</b> repository to the <b>alternative</b><br>
one: <b>#TNS# ==> #TNSother#.</b><br>
(Re-create the #otherRepType# repository tables<br>
and copy data from the #currRepType# repository.)<p></td><td>

$SET_PARAMETERS REPOS_EMPTY=Y ??!REPOS_NOT_EMPTY
$INCLUDE headers.dat[cbutton] param: id=3; func=exportRepos(); label=Export...; disabled=#REPOS_EMPTY#;
</td></tr>

<tr><td class=label nowrap=true><li><b>Create empty</b> alternative repository on <b>#TNSother#</b>.<br>
(Re-create the #otherRepType# repository tables<br>
but do not copy data from the #currRepType# repository.)<br><p>
</td><td>
$INCLUDE headers.dat[cbutton] param: id=4; func=recreate(); label=Create...; disabled=#DIS#;
</td></tr>

<tr><td class=label nowrap=true></td><td>
$INCLUDE headers.dat[cbutton] param: id=5; func=showHelp(); label=Help...; disabled=#DIS#;
</td></tr></table>

</ul>

</td><td valign=top nowrap=true>
<iframe id="svsfr" src="#imgPath#svsframe.html" width=100% height=320 frameBorder=no scrolling=auto>
</iframe>
</td>


<script>
var frm=document.theForm;
var svsFrame = document.getElementById("svsfr");
var currRepos="#conn_str_repos#";

loadSvsFrame2("c=adm_repos_help");

function loadSvsFrame2(params)
{ svsFrame.src = "#ServletRoot##ServletPath#?" + params + "&tm=" + (new Date()).getTime();
}

function testRepos()
{ loadSvsFrame2("c=adm_repos_test&db=#otherRepos#&newInst=#otherRepos#");
}

function switchRepos()
{ loadSvsFrame2("c=adm_repos_swich&db=#otherRepos#&newInst=#otherRepos#");
}

function exportRepos()
{ 
  alert ("Current repository is empty!"); return;  ??!REPOS_NOT_EMPTY
  if (confirm("You are about to export repository data \n\rfrom '#conn_str_repos#' to '"
        + "#otherRepos#'.\n\r\n\r"
        + "ALL THE REPOSITORY DATA existing in '#otherRepos#' WILL BE LOST!\n\r\n\rAre you sure you want to do it?"))
    loadSvsFrame2("c=adm_export&db=#otherRepos#&src=#conn_str_repos#&tns=#TNS#");        
}

function recreate()
{ if (confirm("Empty #otherRepType# ViewDB repository will be created on '#otherRepos#' .\n\r\n\r"
            + "ALL THE REPOSITORY DATA CURRENTLY EXISTING on '#otherRepos#' WILL BE LOST!\n\r\n\rAre you ABSOLUTELY sure you want to do it?\n\r"))
    loadSvsFrame2("c=admin_re&db=#otherRepos#&db~s=#otherRepos#~s");        
}

function showHelp()
{ loadSvsFrame2("c=adm_repos_help");
}

</script>
[end]

[set master]
$SET_PARAMETERS currRepType=master; TNS=#TNS1#; 
$SET_PARAMETERS otherRepos=#repository_2#; otherRepType=secondary; TNSother=#TNS2#;
&nbsp;
[end]

[set secondary]
$SET_PARAMETERS currRepType=secondary; TNS=#TNS2#; 
$SET_PARAMETERS otherRepos=#repository#; otherRepType=master; TNSother=#TNS1#;
&nbsp;
[end]

[preSQLs]

select INSTID as TNS1 from instances where CONN_STR='#repository#'; ??
select INSTID as TNS2 from instances where CONN_STR='#repository_2#'; ??
select SERVICE as TNS1 from instances where CONN_STR='#repository#';
select SERVICE as TNS2 from instances where CONN_STR='#repository_2#';
try: select 'Y' as REPOS_NOT_EMPTY from ACCRIGHTS WHERE ROWNUM=1;
$SET_PARAMETERS DIS=disabled ??!repository_2|!repository
[end]


[parameters]

[end]


[report]
$INCLUDE headers.dat[Head]
<BODY BGCOLOR=slategray LINK="000000" VLINK="000000" ALINK="000000" >
<table bgcolor=ivory cellpadding=0 cellspacing=0 width=100%>
<form><tr><td width=75%>&nbsp;<img src="#imgPath#viewdb.gif" border=0>
<font color=000080 size=+2> - Info </font>
</td><td width=25% align=center><input type=button value="  Close  " onClick="window.close();"></td>
</tr></form></table><br>

<table border=1 bgcolor=white cellpadding=5 cellspacing=0 width=100%>
  <tr><td class=subtitle>Basic components of an Oracle server:</td></tr>
<tr><td class=label>

The numbers indicate the order of the flow of information within the server.
<ol>
<li>       The client program (for example, SQL*PLUS, Oracle Power Objects, or
some other tool) sends a <b>SELECT</b> statement to the server process.
<p>
<li>       The server process looks in the <b>shared pool</b> for a matching SQL
statement. If none is found, the server process parses the SQL and inserts
the SQL statement into the shared pool.
<p>
<li>       The server process looks in the <b>buffer cache</b> for the data blocks
required. If found, the data block must be moved on to the most
recently-used end of the Least Recently Used (LRU) list.
<p>
<li>       If the block cannot be found in the buffer cache the server process
must fetch it from the <b>disk file</b>. This requires a disk <b>I/O</b>.
<p>
<li>       The server process returns the rows retrieved to the client
process. This may involve some network or communications delay.
<p>
<li>       When the client issues the <b>UPDATE</b> statement the process of parsing
the SQL and retrieving the rows to be updated must occur. The update
statement then changes the relevant blocks in <b>shared memory</b> and updates
entries in the <b>rollback segment</b> buffers.
<p>
<li>       The update statement also makes an entry in the <b>redo log</b> buffer
that records the transaction details.
<p>
<li>       The database-writer background process copies modified blocks from
the <b>buffer cache</b> to the database files. The Oracle session performing the
update does not have to wait for this to occur.
<p>
<li>       When the <b>COMMIT</b> statement is issued the log writer process must
copy the contents of the redo log buffer to the redo log file. The COMMIT
statement does not return control to the Oracle session issuing the commit
until this write is complete.
<p>
<li>      If running in <b>ARCHIVELOG</b> mode, the archiver process copies full
redo logs to the archive destination. A redo log is not eligible for re-use
until it has been archived.
<p>
<li>      At regular intervals, or when a redo log switch occurs, Oracle
performs a <b>checkpoint</b>. A checkpoint requires all modified blocks in the
<b>buffer cache to be written to disk</b>. A redo log file cannot be re-used until
the checkpoint completes.
</ol>
</td></tr>

</table>


<script>window.focus();</script>
</body></html>
[end]